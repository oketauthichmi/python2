# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'giaodien.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3
from PyQt5.QtWidgets import QTableWidgetItem
from ctsinhvien import Ui_MainCTSV
from PyQt5.QtWidgets import QMessageBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1110, 805)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.groupBox = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox.setGeometry(QtCore.QRect(770, 0, 331, 231))
        self.groupBox.setObjectName("groupBox")
        self.label = QtWidgets.QLabel(self.groupBox)
        self.label.setGeometry(QtCore.QRect(10, 40, 81, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.groupBox)
        self.label_2.setGeometry(QtCore.QRect(10, 80, 81, 16))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.groupBox)
        self.label_3.setGeometry(QtCore.QRect(10, 120, 71, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.groupBox)
        self.label_4.setGeometry(QtCore.QRect(10, 160, 55, 16))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.groupBox)
        self.label_5.setGeometry(QtCore.QRect(10, 200, 91, 16))
        self.label_5.setObjectName("label_5")
        self.masv = QtWidgets.QLineEdit(self.groupBox)
        self.masv.setGeometry(QtCore.QRect(120, 30, 211, 22))
        self.masv.setObjectName("masv")
        self.tensv = QtWidgets.QLineEdit(self.groupBox)
        self.tensv.setGeometry(QtCore.QRect(120, 70, 211, 22))
        self.tensv.setObjectName("tensv")
        self.email = QtWidgets.QLineEdit(self.groupBox)
        self.email.setGeometry(QtCore.QRect(120, 110, 211, 22))
        self.email.setObjectName("email")
        self.nam = QtWidgets.QRadioButton(self.groupBox)
        self.nam.setGeometry(QtCore.QRect(120, 150, 95, 20))
        self.nam.setObjectName("nam")
        self.nu = QtWidgets.QRadioButton(self.groupBox)
        self.nu.setGeometry(QtCore.QRect(230, 150, 95, 20))
        self.nu.setObjectName("nu")
        self.comboBox = QtWidgets.QComboBox(self.groupBox)
        self.comboBox.setGeometry(QtCore.QRect(120, 190, 211, 22))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(770, 230, 331, 261))
        self.groupBox_2.setObjectName("groupBox_2")
        self.search = QtWidgets.QLineEdit(self.groupBox_2)
        self.search.setGeometry(QtCore.QRect(10, 30, 211, 22))
        self.search.setObjectName("search")
        self.btnsearch = QtWidgets.QPushButton(self.groupBox_2)
        self.btnsearch.setGeometry(QtCore.QRect(230, 20, 91, 31))
        self.btnsearch.setObjectName("btnsearch")
        self.btnadd = QtWidgets.QPushButton(self.groupBox_2)
        self.btnadd.setGeometry(QtCore.QRect(10, 80, 101, 28))
        self.btnadd.setObjectName("btnadd")
        self.btnupdate = QtWidgets.QPushButton(self.groupBox_2)
        self.btnupdate.setGeometry(QtCore.QRect(120, 80, 93, 28))
        self.btnupdate.setObjectName("btnupdate")
        self.btndelete = QtWidgets.QPushButton(self.groupBox_2)
        self.btndelete.setGeometry(QtCore.QRect(230, 80, 93, 28))
        self.btndelete.setObjectName("btndelete")
        self.btnct = QtWidgets.QPushButton(self.groupBox_2)
        self.btnct.setGeometry(QtCore.QRect(30, 140, 121, 28))
        self.btnct.setObjectName("btnct")
        self.pushButton = QtWidgets.QPushButton(self.groupBox_2)
        self.pushButton.setGeometry(QtCore.QRect(190, 140, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(0, 0, 771, 491))
        self.tableWidget.setMinimumSize(QtCore.QSize(771, 0))
        self.tableWidget.setMaximumSize(QtCore.QSize(771, 16777215))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        font = QtGui.QFont()
        font.setPointSize(10)
        item.setFont(font)
        self.tableWidget.setHorizontalHeaderItem(4, item)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1110, 26))
        self.menubar.setObjectName("menubar")
        self.menumenu = QtWidgets.QMenu(self.menubar)
        self.menumenu.setObjectName("menumenu")
        self.menusinhvien = QtWidgets.QMenu(self.menubar)
        self.menusinhvien.setObjectName("menusinhvien")
        self.menutttk = QtWidgets.QMenu(self.menubar)
        self.menutttk.setObjectName("menutttk")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menumenu.menuAction())
        self.menubar.addAction(self.menusinhvien.menuAction())
        self.menubar.addAction(self.menutttk.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.loaddata()
        self.btnadd.clicked.connect(self.insert)
        self.btnupdate.clicked.connect(self.update)
        self.btndelete.clicked.connect(self.delete)
        self.btnsearch.clicked.connect(self.searchid)
        self.pushButton.clicked.connect(self.loaddata)
        self.btnct.clicked.connect(self.buttonCTSV)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.groupBox.setTitle(_translate("MainWindow", "nhập thông tin sinh viên"))
        self.label.setText(_translate("MainWindow", "mã sinh viên"))
        self.label_2.setText(_translate("MainWindow", "tên sinh viên"))
        self.label_3.setText(_translate("MainWindow", "email"))
        self.label_4.setText(_translate("MainWindow", "giới tính"))
        self.label_5.setText(_translate("MainWindow", "chuyên ngành"))
        self.nam.setText(_translate("MainWindow", "nam"))
        self.nu.setText(_translate("MainWindow", "nữ"))
        self.comboBox.setItemText(0, _translate("MainWindow", "công nghệ phần mềm"))
        self.comboBox.setItemText(1, _translate("MainWindow", "quản trị an ninh mạng"))
        self.comboBox.setItemText(2, _translate("MainWindow", "trí tuệ nhân tạo và thị giác máy tính"))
        self.comboBox.setItemText(3, _translate("MainWindow", "khoa học dữ liệu"))
        self.comboBox.setItemText(4, _translate("MainWindow", "khoa học máy tính"))
        self.groupBox_2.setTitle(_translate("MainWindow", "thao tác"))
        self.btnsearch.setText(_translate("MainWindow", "tìm kiếm"))
        self.btnadd.setText(_translate("MainWindow", "thêm sinh viên"))
        self.btnupdate.setText(_translate("MainWindow", "sửa sinh viên"))
        self.btndelete.setText(_translate("MainWindow", "xóa sinh viên"))
        self.btnct.setText(_translate("MainWindow", "chi tiết sinh viên"))
        self.pushButton.setText(_translate("MainWindow", "load"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "mã sinh viên"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "tên sinh viên"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "email"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "giới tính"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "chuyên ngành"))
        self.menumenu.setTitle(_translate("MainWindow", "main"))
        self.menusinhvien.setTitle(_translate("MainWindow", "sinhvien"))
        self.menutttk.setTitle(_translate("MainWindow", "tttk"))
    def loaddata(self):
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query = "SELECT * FROM sinhvien"
        self.curor = self.conn.execute(query)
        result = self.curor.fetchall()
        self.tableWidget.setRowCount(0)
        for row_number, row_data in enumerate(result):
            self.tableWidget.insertRow(row_number)
            for column_number, row_data in enumerate(row_data):
                self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(row_data)))
    def checkid(self):
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query = "SELECT masv FROM sinhvien"
        curor = self.conn.execute(query)
        row = curor.fetchall()
        self.conn.close()
        return row
    def insert(self):
        self.row = self.checkid()
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query="INSERT INTO sinhvien(masv,name,email,gioitinh,chuyennganh) VALUES(?,?,?,?,?) "
        textmasv = self.masv.text()
        masv = int(textmasv) if textmasv else 0
        name = self.tensv.text()
        email = self.email.text()
        if self.nam.isChecked():
            gioitinh = self.nam.text()
        if self.nu.isChecked():
            gioitinh = self.nu.text()
        chuyennganh = self.comboBox.currentText()
        if (masv,) in self.row:
            self.error = QtWidgets.QErrorMessage()
            self.error.showMessage("Mã sinh viên bạn vừa nhập đã tồn tại!")
        elif masv=='' or name=='' or email=='' or gioitinh=='' or chuyennganh=='':
            self.error = QtWidgets.QErrorMessage()
            self.error.showMessage("Vui lòng nhập đầy đủ thông tin của sinh viên")
        else:
            self.addctsv()
            self.data = (masv,name,email,gioitinh,chuyennganh)
            self.conn.execute(query,self.data)
            self.conn.commit()
            self.conn.close()
            self.msg = QMessageBox()
            self.msg.setIcon(QMessageBox.Information)
            self.msg.setText("Thêm thành công")
            self.msg.setWindowTitle("Thành công")
            self.msg.show()
        self.loaddata()
    def update(self):
        self.row = self.checkid()
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query = "UPDATE sinhvien SET name=?, email=?, gioitinh=?, chuyennganh=? WHERE masv=?"
        textmasv = self.masv.text()
        masv = int(textmasv) if textmasv else 0
        name = self.tensv.text()
        email = self.email.text()
        if self.nam.isChecked():
            gioitinh = self.nam.text()
        if self.nu.isChecked():
            gioitinh = self.nu.text()
        chuyennganh = self.comboBox.currentText()
        if (masv,) in self.row:
            if name=='' or email=='' or gioitinh=='' or chuyennganh=='':
                self.error = QtWidgets.QErrorMessage()
                self.error.showMessage("Vui lòng nhập đầy đủ thông tin của sinh viên")
            else:
                self.updatectsv()
                self.data = (name, email, gioitinh, chuyennganh, masv)
                self.conn.execute(query,self.data)
                self.conn.commit()
                self.conn.close()
                self.msg = QMessageBox()
                self.msg.setIcon(QMessageBox.Information)
                self.msg.setText("cập nhập thành công")
                self.msg.setWindowTitle("Thành công")
                self.msg.show()
        else:
            self.error = QtWidgets.QErrorMessage()
            self.error.showMessage("Mã sinh viên vừa nhập không tồn tại")
        self.loaddata()
    def delete(self):
        self.row = self.checkid()
        textmasv = self.masv.text()
        masv = int(textmasv) if textmasv else 0
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query = "DELETE FROM sinhvien WHERE masv="+str(masv)
        if (masv,) in self.row:
            self.deletectsv()
            self.conn.execute(query)
            self.conn.commit()
            self.conn.close()
            self.msg = QMessageBox()
            self.msg.setIcon(QMessageBox.Information)
            self.msg.setText("Xóa thành công")
            self.msg.setWindowTitle("Thành công")
            self.msg.show()
        else:
            self.error = QtWidgets.QErrorMessage()
            self.error.showMessage("Vui lòng nhập chính xác mã sinh viên cần xóa")
        self.loaddata()
    def searchid(self):
        self.row = self.checkid()
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        textsearch = self.search.text()
        txtsearch = int(textsearch) if textsearch else 0
        if (txtsearch,) in self.row:
            query = "SELECT * FROM sinhvien WHERE masv="+str(txtsearch)
            self.curor = self.conn.execute(query)
            result = self.curor.fetchall()
            self.tableWidget.setRowCount(0)
            for row_number, row_data in enumerate(result):
                self.tableWidget.insertRow(row_number)
                for column_number, row_data in enumerate(row_data):
                    self.tableWidget.setItem(row_number, column_number, QTableWidgetItem(str(row_data)))
        else:
            self.error = QtWidgets.QErrorMessage()
            self.error.showMessage("Vui lòng nhập mã sinh viên cần tìm kiếm")
    def checkidctsv(self):
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query = "SELECT masv FROM chitiet"
        self.curor = self.conn.execute(query)
        self.rowctsv = self.curor.fetchall()
        #print(self.row)
        return self.rowctsv
    def addctsv(self):
        self.checkidctsv()
        textmasv = self.masv.text()
        masv = int(textmasv) if textmasv else 0
        name = self.tensv.text()
        email = self.email.text()
        if self.nam.isChecked():
            gioitinh = self.nam.text()
        if self.nu.isChecked():
            gioitinh = self.nu.text()
        chuyennganh = self.comboBox.currentText()
        #print((masv,))
        if (masv,) in self.rowctsv:
            print("no")
        else:
            self.conn = sqlite3.connect("E:/bc/ktpython.db")
            query="INSERT INTO chitiet(masv,tensv,email,chuyennganh) VALUES(?,?,?,?) "
            self.data = (masv,name,email,chuyennganh)
            self.conn.execute(query,self.data)
            self.conn.commit()
    def updatectsv(self):
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query = "UPDATE chitiet SET tensv=?, email=?, chuyennganh=? WHERE masv=?"
        textmasv = self.masv.text()
        masv = int(textmasv) if textmasv else 0
        name = self.tensv.text()
        email = self.email.text()
        chuyennganh = self.comboBox.currentText()
        self.data = (name, email, chuyennganh, masv)
        self.conn.execute(query,self.data)
        self.conn.commit()
    def deletectsv(self):
        textmasv = self.masv.text()
        masv = int(textmasv) if textmasv else 0
        self.conn = sqlite3.connect("E:/bc/ktpython.db")
        query = "DELETE FROM chitiet WHERE masv="+str(masv)
        self.conn.execute(query)
        self.conn.commit()
    def buttonCTSV(self):
        self.MainWindow = QtWidgets.QMainWindow()
        self.ui = Ui_MainCTSV()
        self.ui.setupUi(self.MainWindow)
        self.MainWindow.show()
            

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
